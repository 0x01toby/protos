// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/department.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// department 请求数据
type DepartmentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepartmentRequest) Reset()         { *m = DepartmentRequest{} }
func (m *DepartmentRequest) String() string { return proto.CompactTextString(m) }
func (*DepartmentRequest) ProtoMessage()    {}
func (*DepartmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60a84cf113b99d84, []int{0}
}

func (m *DepartmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepartmentRequest.Unmarshal(m, b)
}
func (m *DepartmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepartmentRequest.Marshal(b, m, deterministic)
}
func (m *DepartmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepartmentRequest.Merge(m, src)
}
func (m *DepartmentRequest) XXX_Size() int {
	return xxx_messageInfo_DepartmentRequest.Size(m)
}
func (m *DepartmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DepartmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DepartmentRequest proto.InternalMessageInfo

func (m *DepartmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// department 响应数据
type DepartmentReply struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Order                int32    `protobuf:"varint,3,opt,name=Order,proto3" json:"Order,omitempty"`
	Phone                string   `protobuf:"bytes,4,opt,name=Phone,proto3" json:"Phone,omitempty"`
	CreatedAt            string   `protobuf:"bytes,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepartmentReply) Reset()         { *m = DepartmentReply{} }
func (m *DepartmentReply) String() string { return proto.CompactTextString(m) }
func (*DepartmentReply) ProtoMessage()    {}
func (*DepartmentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_60a84cf113b99d84, []int{1}
}

func (m *DepartmentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepartmentReply.Unmarshal(m, b)
}
func (m *DepartmentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepartmentReply.Marshal(b, m, deterministic)
}
func (m *DepartmentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepartmentReply.Merge(m, src)
}
func (m *DepartmentReply) XXX_Size() int {
	return xxx_messageInfo_DepartmentReply.Size(m)
}
func (m *DepartmentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DepartmentReply.DiscardUnknown(m)
}

var xxx_messageInfo_DepartmentReply proto.InternalMessageInfo

func (m *DepartmentReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DepartmentReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DepartmentReply) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *DepartmentReply) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *DepartmentReply) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

// department list request
type DepartmentListRequest struct {
	Order                string   `protobuf:"bytes,1,opt,name=Order,proto3" json:"Order,omitempty"`
	CreatedAt            string   `protobuf:"bytes,2,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepartmentListRequest) Reset()         { *m = DepartmentListRequest{} }
func (m *DepartmentListRequest) String() string { return proto.CompactTextString(m) }
func (*DepartmentListRequest) ProtoMessage()    {}
func (*DepartmentListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60a84cf113b99d84, []int{2}
}

func (m *DepartmentListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepartmentListRequest.Unmarshal(m, b)
}
func (m *DepartmentListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepartmentListRequest.Marshal(b, m, deterministic)
}
func (m *DepartmentListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepartmentListRequest.Merge(m, src)
}
func (m *DepartmentListRequest) XXX_Size() int {
	return xxx_messageInfo_DepartmentListRequest.Size(m)
}
func (m *DepartmentListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DepartmentListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DepartmentListRequest proto.InternalMessageInfo

func (m *DepartmentListRequest) GetOrder() string {
	if m != nil {
		return m.Order
	}
	return ""
}

func (m *DepartmentListRequest) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

// department list response
type DepartmentListReply struct {
	List                 []*DepartmentReply `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DepartmentListReply) Reset()         { *m = DepartmentListReply{} }
func (m *DepartmentListReply) String() string { return proto.CompactTextString(m) }
func (*DepartmentListReply) ProtoMessage()    {}
func (*DepartmentListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_60a84cf113b99d84, []int{3}
}

func (m *DepartmentListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepartmentListReply.Unmarshal(m, b)
}
func (m *DepartmentListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepartmentListReply.Marshal(b, m, deterministic)
}
func (m *DepartmentListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepartmentListReply.Merge(m, src)
}
func (m *DepartmentListReply) XXX_Size() int {
	return xxx_messageInfo_DepartmentListReply.Size(m)
}
func (m *DepartmentListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DepartmentListReply.DiscardUnknown(m)
}

var xxx_messageInfo_DepartmentListReply proto.InternalMessageInfo

func (m *DepartmentListReply) GetList() []*DepartmentReply {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*DepartmentRequest)(nil), "user.DepartmentRequest")
	proto.RegisterType((*DepartmentReply)(nil), "user.DepartmentReply")
	proto.RegisterType((*DepartmentListRequest)(nil), "user.DepartmentListRequest")
	proto.RegisterType((*DepartmentListReply)(nil), "user.DepartmentListReply")
}

func init() { proto.RegisterFile("user/department.proto", fileDescriptor_60a84cf113b99d84) }

var fileDescriptor_60a84cf113b99d84 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xdd, 0x4a, 0xc3, 0x40,
	0x10, 0x85, 0xdd, 0x34, 0x11, 0x3a, 0x82, 0xd2, 0xd1, 0xe0, 0x5a, 0xbd, 0x08, 0xf1, 0x26, 0xde,
	0x44, 0xa8, 0x2f, 0xe0, 0x2f, 0x12, 0xfc, 0x25, 0x6f, 0x10, 0xd9, 0x01, 0x0b, 0x6d, 0x13, 0x37,
	0xdb, 0x8b, 0x5e, 0xf9, 0x2e, 0x3e, 0xa9, 0xec, 0x44, 0xb2, 0x75, 0xdb, 0xbb, 0xcc, 0x39, 0x87,
	0x6f, 0xce, 0x64, 0x21, 0x5e, 0xb6, 0xa4, 0x2f, 0x15, 0x35, 0x95, 0x36, 0x73, 0x5a, 0x98, 0xbc,
	0xd1, 0xb5, 0xa9, 0x31, 0xb4, 0x72, 0x7a, 0x0e, 0xa3, 0xfb, 0xde, 0x29, 0xe9, 0x6b, 0x49, 0xad,
	0xc1, 0x7d, 0x08, 0x0a, 0x25, 0x45, 0x22, 0xb2, 0x61, 0x19, 0x14, 0x2a, 0xfd, 0x86, 0x83, 0xf5,
	0x50, 0x33, 0x5b, 0xf9, 0x11, 0x44, 0x08, 0x5f, 0xab, 0x39, 0xc9, 0x80, 0x15, 0xfe, 0xc6, 0x23,
	0x88, 0xde, 0xb4, 0x22, 0x2d, 0x07, 0x89, 0xc8, 0xa2, 0xb2, 0x1b, 0xac, 0xfa, 0xfe, 0x59, 0x2f,
	0x48, 0x86, 0x1c, 0xed, 0x06, 0x3c, 0x83, 0xe1, 0x9d, 0xa6, 0xca, 0x90, 0xba, 0x31, 0x32, 0x62,
	0xc7, 0x09, 0xe9, 0x13, 0xc4, 0xae, 0xc0, 0xf3, 0xb4, 0xed, 0x9b, 0xf6, 0x2b, 0xba, 0x26, 0x7f,
	0x2b, 0xfe, 0xc1, 0x02, 0x1f, 0x76, 0x0d, 0x87, 0x3e, 0xcc, 0x5e, 0x74, 0x01, 0xe1, 0x6c, 0xda,
	0x1a, 0x29, 0x92, 0x41, 0xb6, 0x37, 0x89, 0x73, 0xfb, 0x7b, 0x72, 0xef, 0xec, 0x92, 0x23, 0x93,
	0x1f, 0x01, 0xe0, 0x1c, 0x7c, 0x80, 0xd1, 0x23, 0x19, 0x27, 0xdc, 0xae, 0x0a, 0x85, 0xc7, 0x9b,
	0x00, 0xae, 0x3c, 0xde, 0x4e, 0x4e, 0x77, 0xf0, 0xc5, 0xc3, 0xd8, 0x6a, 0x78, 0xea, 0xa7, 0xd7,
	0xae, 0x1f, 0x9f, 0x6c, 0x37, 0x19, 0xf7, 0xb1, 0xcb, 0xcf, 0x7c, 0xf5, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0x17, 0x0a, 0x26, 0x9a, 0xff, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DepartmentClient is the client API for Department service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DepartmentClient interface {
	GetDepartmentById(ctx context.Context, in *DepartmentRequest, opts ...grpc.CallOption) (*DepartmentReply, error)
	GetDepartmentList(ctx context.Context, in *DepartmentListRequest, opts ...grpc.CallOption) (*DepartmentListReply, error)
}

type departmentClient struct {
	cc *grpc.ClientConn
}

func NewDepartmentClient(cc *grpc.ClientConn) DepartmentClient {
	return &departmentClient{cc}
}

func (c *departmentClient) GetDepartmentById(ctx context.Context, in *DepartmentRequest, opts ...grpc.CallOption) (*DepartmentReply, error) {
	out := new(DepartmentReply)
	err := c.cc.Invoke(ctx, "/user.Department/GetDepartmentById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *departmentClient) GetDepartmentList(ctx context.Context, in *DepartmentListRequest, opts ...grpc.CallOption) (*DepartmentListReply, error) {
	out := new(DepartmentListReply)
	err := c.cc.Invoke(ctx, "/user.Department/GetDepartmentList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DepartmentServer is the server API for Department service.
type DepartmentServer interface {
	GetDepartmentById(context.Context, *DepartmentRequest) (*DepartmentReply, error)
	GetDepartmentList(context.Context, *DepartmentListRequest) (*DepartmentListReply, error)
}

// UnimplementedDepartmentServer can be embedded to have forward compatible implementations.
type UnimplementedDepartmentServer struct {
}

func (*UnimplementedDepartmentServer) GetDepartmentById(ctx context.Context, req *DepartmentRequest) (*DepartmentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDepartmentById not implemented")
}
func (*UnimplementedDepartmentServer) GetDepartmentList(ctx context.Context, req *DepartmentListRequest) (*DepartmentListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDepartmentList not implemented")
}

func RegisterDepartmentServer(s *grpc.Server, srv DepartmentServer) {
	s.RegisterService(&_Department_serviceDesc, srv)
}

func _Department_GetDepartmentById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DepartmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepartmentServer).GetDepartmentById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Department/GetDepartmentById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepartmentServer).GetDepartmentById(ctx, req.(*DepartmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Department_GetDepartmentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DepartmentListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepartmentServer).GetDepartmentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Department/GetDepartmentList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepartmentServer).GetDepartmentList(ctx, req.(*DepartmentListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Department_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.Department",
	HandlerType: (*DepartmentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDepartmentById",
			Handler:    _Department_GetDepartmentById_Handler,
		},
		{
			MethodName: "GetDepartmentList",
			Handler:    _Department_GetDepartmentList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/department.proto",
}
